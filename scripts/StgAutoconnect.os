//@script_name АвтоподключениеКХранилищу
//@script_display_name Автоподключение к хранилищу
//@script_description Автоподключение к хранилищу
//@script_author demon_infernal (oktb1c at gmail.com)
//@script_url https://turboconf.ru/Forum/Details/3676#StgAutoconnect
//@script_section Работа с хранилищем
//@trigger 1
//@filter ^Соединение с хранилищем конфигурации.*$|^Соединение с хранилищем расширения.*$
//@retain_clipboard 1
//@enterprise_mode 0
//@hide_actions 0
//@script_version 5

//Изменен m.bolsun 12.01.19 При появления окна после ввода пароля, добавлена дополнительная проверка, что вход выполнен удачно. Добавлено скрытие вводимого пароля.
//Изменен m.bolsun 01.03.19 Сохранение текущего пользователя хранилища в переменную сеанса %_CurrentStorageUser_%
//Изменен demon_infernal 31.05.2019 Добавлена возможность указывать пустой пароль
//Изменен m.bolsun 20.06.19 Проверка окна с ошибкой теперь выполняется через проверку указателя. Добавлены задержки по 100мс перед получением значений пути и логина из полей ввода,
// т.к. иногда конфигуратор не успевал отработать перемещение фокуса.
//Изменен m.bolsun 25.02.21 Добавлена приостановка автподключения при неудачном соединении.

Перем _КлючСохраняемыхДанных;
Перем ТК;

Функция ПолучитьПрефикс()

	Возврат "АвтоподключениеКХранилищу/";

КонецФункции

Функция ПолучитьКлючСохраняемыхДанных(ПутьИЛогин)

	Возврат ПолучитьПрефикс() + ПутьИЛогин.Путь + "/" + ПутьИЛогин.Логин;
	
КонецФункции

Функция ПолучитьПутьКХранилищуИЛогин()
	
	ТК = Новый ТурбоКонф;
	
	ТК.Клавиша(Клавиши.Tab, 4); // нажимаем Таб четыре раза, чтобы попасть в поле с Путем к хранилищу

	ТК.Ждать(100);
	ПутьКХранилищу = ТК.ПолучитьЗначение();

	//Сообщить("ПутьКХранилищу:"+ПутьКХранилищу);
		
	ТК.Клавиша(Клавиши.Tab, 1);
	
	ТК.Ждать(100);

	Логин = ТК.ПолучитьЗначение();

	//Сообщить("Логин:"+Логин);

	ТК.СохранитьЗначениеСеанса("%_CurrentStorageUser_%", Логин);
	
	ТК.Клавиша(Клавиши.Tab, 1);

	Возврат Новый Структура("Путь, Логин", ПутьКХранилищу, Логин);
	
КонецФункции

Процедура ЗапроситьПарольУПользователя()

	Форма = Новый ФормаВводаЗначения();
	Форма.УстановитьДействие(ЭтотОбъект, "ОбработчикВводаЗначения");
	Форма.Заголовок = "Введите пароль от хранилища";
	Форма.Текст = "Введите пароль от хранилища для последующего автоматического подключения";
	Форма.РежимВводаПароля = Истина;
	Форма.Показать();

КонецПроцедуры

Процедура ОбработчикВводаЗначения(Значение, Отказ) Экспорт

	Если НЕ Отказ Тогда

		ТК = Новый ТурбоКонф;
		
		ТК.СохранитьЗначение(_КлючСохраняемыхДанных, Значение, Истина);
		
		ПослатьПарольВОкноПодключения(Значение);
	
	КонецЕсли;

КонецПроцедуры

Процедура ПоказатьВопросОСбросеПароля()

	ВопросПользователю = Новый ВопросПользователю(РежимДиалогаВопрос.ДаНет);

	ВопросПользователю.Заголовок = "Сбросить сохраненный пароль?";
	ВопросПользователю.Текст = "Автоподключение к хранилищу прошло неудачно. Сбросить сохраненный пароль?";
	ВопросПользователю.УстановитьОбработчик(ЭтотОбъект, "ОбработчикОтветаПользователя");

	ВопросПользователю.Показать();

КонецПроцедуры

Процедура ОбработчикОтветаПользователя(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
	
		ТК.УдалитьЗначение(_КлючСохраняемыхДанных);
	
	КонецЕсли;

КонецПроцедуры

Процедура ПослатьПарольВОкноПодключения(Пароль)

	//ТК.УстановитьЗначение(Пароль); - почему то начало ругаться, что нет такого метода, хотя раньше срабатывало
	
	Если ЗначениеЗаполнено(Пароль) Тогда
		ТК.ВставитьТекст(Пароль);
	КонецЕсли;
	
	ТК.Клавиша(Клавиши.Tab, 1);
	ТК.Клавиша(Клавиши.Enter, 1);

	Указатель = ТК.ЖдатьОкно("Конфигуратор", 1000, Ложь);

	Если Указатель = 0 Тогда
		Возврат;
	КонецЕсли;

	// Если указатель не пустой, то значит окно с ошибкой удалось дождаться,
	// а значит, нужно спросить пользователя о сбросе пароля
	
	//Убедимся в том, что это действительно сообщение об ошибке

	Результат = ТК.НайтиЭлементПоИмени("Ошибка аутентификации в хранилище конфигурации!
	|Проверьте правильность введенного имени пользователя и пароля.", "панель");

	Если Результат Тогда
		ПоказатьВопросОСбросеПароля();	
	Иначе
		//Приостанавливаем автподключение, устанавливаем флаг Отключено
		ТК.СохранитьЗначениеСеанса(ПолучитьПрефикс() + "Отключено", Истина);
	КонецЕсли;
		
КонецПроцедуры
Процедура ВыполнитьСкрипт()

	//Если предыдущее подключение прошло неудачно, не выполняем скрипт, но сбрасываем флаг
	Если ТК.ВосстановитьЗначениеСеанса(ПолучитьПрефикс() + "Отключено") = Истина Тогда
		ТК.СохранитьЗначениеСеанса(ПолучитьПрефикс() + "Отключено", Ложь);
		Возврат;
	КонецЕсли;
	
	ПутьИЛогин = ПолучитьПутьКХранилищуИЛогин();
			
	Если ЗначениеЗаполнено(ПутьИЛогин.Путь) И ЗначениеЗаполнено(ПутьИЛогин.Логин) Тогда
		
		_КлючСохраняемыхДанных = ПолучитьКлючСохраняемыхДанных(ПутьИЛогин);
		
		Пароль = ТК.ВосстановитьЗначение(_КлючСохраняемыхДанных, Истина); // второй параметр Истина говорит о том, что значение хранится в зашифрованном виде и его нужно расшифровать
		
		Если Пароль = Неопределено Тогда
				
			ЗапроситьПарольУПользователя();
					
		Иначе
			// если есть сохраненные данные - попробуем подставить их
					
			ПослатьПарольВОкноПодключения(Пароль);
					
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

// Блок основного кода, вызываемый при старте скрипта
		
ТК = Новый ТурбоКонф;

ВыполнитьСкрипт();