//ВНИМАНИЕ! Этот файл будет перезаписан при следующем обновлении программы!
//Сохраните файл под другим именем после внесения изменений

// Команды:
// <!> установить позицию курсора после вставки текста шаблона
// <?> установить позицию курсора после вставки текста шаблона и нажать Ctrl+Space
// <ENTER> нажать ENTER после вставки, но до установки позиции курсора

//Context:
//	0 - любой (шаблон будет показан везде)
//	1 - глобальный (шаблон будет показан в глобальном контексте)
//	2 - класса (будет показан только после .)

//Priority:
//Шаблоны с более высоким приоритетом показываются в списке меню выше. Чем больше число, тем выше приоритет. По умолчанию 0.
//Шаблоны с приоритетом 0 не показываются в списке, пока в поиске не набран хотя бы один символ
//Встроенные функции языка имеют приоритет 10

//Для динамических шаблонов, специальные переменные:
 //$0 - полное совпадение фильтра
 //$1 - первая захваченная группа (в скобках)
 //$2 - вторая группа и т.д.

[
  //Шаблон для выражений вида ВалютаУчета = Форма.ВалютаУчета;
  //При совпадении фильтра, в меню будет добавлено значение ВалютаУчета 
  {
    "FromContext": true,
    "Priority": 30,
    "CustomFilter": "",
    "Context": 0,
    "ChildItems": null,
    "ValueForFilter": "$1",
    "DisplayedValue": "$1",
    "Value": "$1",
    "IsMethod": false,
    Cached: false,
    SmartFilter: "\\b([\\w_]+)\\s*=\\s*([\\w_][\\w\\d_]*)\\.[\\w_]*$",
    IsDynamicTemplate: true
  },
  //Шаблон для выражений вида Запрос.УстановитьПараметр("Организация", Организация);
  //При совпадении фильтра, в меню будет добавлено значение Организация 
  {
    "FromContext": true,
    "Priority": 30,
    "CustomFilter": "",
    "Context": 0,
    "ChildItems": null,
    "ValueForFilter": "$1",
    "DisplayedValue": "$1",
    "Value": "$1",
    "IsMethod": false,
    Cached: false,
    SmartFilter: "\\.УстановитьПараметр\\(\\\"([\\w_]+)\\\",\\s*[\\w_]*$",
    IsDynamicTemplate: true
  },
  //Если предыдущая строка имеет вид ТаблицаВариантов.Колонки.Добавить("Отчет", ТипСтрока);
  //При совпадении фильтра, в меню будет добавлено значение ТаблицаВариантов.Колонки.Добавить(,); 
  {
    "FromContext": true,
    "Priority": 30,
    "CustomFilter": "",
    "Context": 0,
    "Template": {
      "Name": "$1.Колонки.Добавить",
      "Text": "$1.Колонки.Добавить(<!>, );"
    },    
    "ChildItems": null,
    "ValueForFilter": "$1КолонкиДобавить",
    "DisplayedValue": "$1.Колонки.Добавить(,)",
    "Value": "$1",
    "IsMethod": false,
    Cached: false,
    SmartFilter: "\\b([\\w_]+)\\.Колонки\\.Добавить\\([^\\n]+\\n[\\t ]*[\\w_]*$",    
    IsDynamicTemplate: true    
  },
  //Шаблон для выражений запроса вида Номенклатура.Наименование КАК Наименование
  //При совпадении фильтра, в меню будет добавлено значение Наименование 
  {
    "FromContext": true,
    "Priority": 30,
    "CustomFilter": "",
    "Context": 4,
    "ChildItems": null,
    "ValueForFilter": "$1",
    "DisplayedValue": "$1",
    "Value": "$1",
    "IsMethod": false,
    Cached: false,
    SmartFilter: "\\b[\\w_][\\w\\d_]*\\.([\\w_]+)\\s*КАК\\s*[\\w_]*$",
    IsDynamicTemplate: true
  },
//Шаблон для выражений запроса вида Номенклатура.Наименование КАК Наименование
  //При совпадении фильтра, в меню будет добавлено значение Наименование 
  {
    "FromContext": true,
    "Priority": 30,
    "CustomFilter": "",
    "Context": 4,
    "ChildItems": null,
    "ValueForFilter": "КАК$1",
    "DisplayedValue": "КАК $1",
    "Value": "КАК $1",
    "IsMethod": false,
    Cached: false,
    SmartFilter: "\\b[\\w_][\\w\\d_]*\\.([\\w_]+)\\s*ка?к?\\s*[\\w_]*$",
    IsDynamicTemplate: true
  },
  //Шаблон для выражений запроса вида Номенклатура.Наименование = &Наименование
  //При совпадении фильтра, в меню будет добавлено значение Наименование 
  {
    "FromContext": true,
    "Priority": 30,
    "CustomFilter": "",
    "Context": 4,
    "ChildItems": null,
    "ValueForFilter": "$1",
    "DisplayedValue": "$1",
    "Value": "$1",
    "IsMethod": false,
    Cached: false,
    SmartFilter: "\\b[\\w_][\\w\\d_]*\\.([\\w_]+)\\s*=\\s*\\&[\\w_]*$",
    IsDynamicTemplate: true
  }  
]